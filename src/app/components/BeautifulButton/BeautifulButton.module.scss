@use 'sass:math';

@keyframes rainDrop {
  0% {
    transform: translateY(-15px) scale(0.3);
    opacity: 0;
  }
  20% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  100% {
    transform: translateY(35px) scale(1);
    opacity: 0;
  }
}

@keyframes floatCircle {
  0% {
    transform: translateY(0) translateX(0) scale(0.6);
    opacity: 1;
  }
  100% {
    transform: translateY(-60px) translateX(var(--random-x)) scale(1.2);
    opacity: 0;
  }
}

.cloudButton {
  --cloud-white: #ffffff;
  --cloud-gray: #6c6c6c;
  --rain-blue: #60a5fa;
  --text-dark: #1e293b;
  --text-gray: #5979a6;

  position: relative;
  padding: 2rem 3.5rem;
  border: none;
  font-size: 1.1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease-in-out;
  background: transparent;
  color: var(--text-dark);
  overflow: visible;
  min-width: 200px;
  text-align: center;
  margin: 1.5rem;
  z-index: 1;
  font-family: 'Nunito', 'Segoe UI', sans-serif;
  text-transform: uppercase;
  letter-spacing: 1px;
  filter: drop-shadow(0 4px 6px rgba(0, 0, 0, 0.1));

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--cloud-white);
    border-radius: 100px;
    z-index: -1;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  }

  &:active:not(:disabled) {
    transform: translateY(2px) scale(0.98);
  }

  &:disabled {
    color: var(--text-gray);
    cursor: not-allowed;

    &::before {
      background: var(--cloud-gray);
    }

    .raindrop {
      position: absolute;
      background: var(--rain-blue);
      border-radius: 50% 50% 0 50%;
      transform: rotate(-30deg);
      animation: rainDrop 1.8s linear infinite;
      filter: drop-shadow(0 1px 2px rgba(147, 197, 253, 0.5));
    }

    @function random-range($min, $max) {
      @return math.random($max - $min) + $min;
    }

    @for $i from 1 through 15 {
      .raindrop:nth-child(#{$i}) {
        left: random-range(2, 97) * 1%;
        width: random-range(3, 8) * 1px; // Wider range
        height: random-range(5, 15) * 1px; // Taller range
        top: random-range(30, 70) * 1%; // More vertical spread
        animation-delay: math.div(random-range(0, 300), 100) *
          1s; // Longer delay range
        animation-duration: math.div(random-range(15, 25), 10) *
          1s; // Random duration
        opacity: math.div(random-range(5, 10), 10); // Random opacity
      }
    }
  }

  &:not(:disabled) {
    .circle {
      position: absolute;
      background-color: #ff6b81;
      border-radius: 50%;
      animation: floatCircle 2.5s ease-in-out infinite;
      opacity: 0.8;

      @function random-range($min, $max) {
        @return math.random($max - $min) + $min;
      }

      @for $i from 1 through 15 {
        &:nth-child(#{$i}) {
          --random-x: #{random-range(-20, 20)}px;
          left: random-range(2, 97) * 1%;
          width: random-range(6, 12) * 1px;
          height: random-range(6, 12) * 1px;
          top: random-range(45, 60) * 1%;
          animation-delay: math.div(random-range(0, 150), 100) * 1s;
          animation-duration: random-range(20, 35) * 0.1s;
        }
      }
    }
  }

  .buttonContent {
    position: relative;
    z-index: 10;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.75rem;
    padding: 0.5rem 1rem;
  }
}
